<?php
/**
 * FileName: ActivityController.class.php
 * User: Comos
 * Date: 2018/1/9 9:51
 */

namespace Admin\Controller;


class ActivityController extends BaseController
{
    private $_modle;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->_modle = D('activity_main');
    }

    /**
     * 活动列表
     * @param int $p 页码
     */
    public function index($p = 1)
    {
        //获取员工列表
        $activitys = $this->_modle->getActivityList($p);
        if (!$activitys) {
            $this->error('获取员工列表失败');
        }

        //分配数据,载入视图
        $this->assign('pageHtml', $activitys['pageHtml']);
        $this->assign('list', $activitys['list']);
        $this->display();
    }

    /**
     * 添加活动
     */
    public function add()
    {
        if (IS_POST) {
            //收集数据
            if ($data = $this->_modle->create() === false) {
                $this->error($this->_modle->getError());
            }

            //添加数据
            if (!$this->_modle->insertNewData($data)) {
                $this->error('添加活动失败');
            }

            $this->success('添加成功', U('Activity/index'));
        } else {
            $this->display();
        }
    }

    /**
     * 修改活动信息
     * @param $id int 活动ID
     */
    public function edit($id)
    {
        if (IS_POST) {
            //收集数据
            if ($data = $this->_modle->create() === false) {
                $this->error($this->_modle->getError());
            }

            //添加数据
            if (!$this->_modle->updateOldData($data)) {
                $this->error('修改活动失败');
            }

            $this->success('修改活动成功', U('Activity/index'));
        } else {

            //获取活动数据
            $detail = $this->_modle->find($id);
            if (!$detail) {
                $this->error('获取活动数据失败');
            }

            $detail['start_time'] = date('Y-m-d H:i:s', $detail['start_time']);
            $detail['end_time'] = date('Y-m-d H:i:s', $detail['end_time']);

            //获取活动数据
            $this->assign('detail', $detail);
            $this->display('add');
        }
    }

    /**
     * 删除活动
     * @param $id int 删除活动
     */
    public function del($id)
    {
        $count = $this->_modle->where(['id' => $id])->count();
        if ($count) {
            $rs = $this->_modle->delete($id);
            if ($rs === false) {
                $this->error('删除活动失败');
            }
            $this->success('删除活动成功', U('Activity/index'));
        }
    }

    /**
     * 查看活动
     * @param $id
     */
    public function detail($id)
    {
        //获取活动数据
        $detail = $this->_modle->find($id);
        if (!$detail) {
            $this->error('获取活动数据失败');
        }

        //获取活动数据
        $this->assign('detail', $detail);
        $this->display('detail');
    }

    /**
     * 中奖记录
     * @param $id int 活动ID
     * @param $p int 页码
     */
    public function record($id, $p = 1)
    {
        //获取活动数据
        $list = $this->_modle->getWinRecord($id, $p);
        if (!$list) {
            $this->error('获取活动数据失败');
        }

        //分配数据,载入视图
        $this->assign('pageHtml', $list['pageHtml']);
        $this->assign('list', $list['list']);
        $this->display();
    }

    /**
     * 删除中奖信息
     * @param $id int 中奖记录ID
     * @param $activity_id int 活动ID
     */
    public function delRecord($id, $activity_id)
    {
        $rs = M('activity_lottery')->where(['id' => $id])->delete();
        if ($rs === false) {
            $this->error('删除中奖信息失败');
        }
        //成功提示
        $this->success('删除中奖信息成功', U('record', array('id' => $activity_id)));
    }
}